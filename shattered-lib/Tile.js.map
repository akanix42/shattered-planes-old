{"version":3,"sources":["Tile.js"],"names":[],"mappings":"AAAA,a;AACA,0D;AACA,wC;AACA,0D;;;AAGM,I;;;;;;AAMJ,gBAAY,KAAZ,EAAmB,GAAnB,EAAwB,kCALxB,aAKwB,GALR,IAKQ,MAJxB,SAIwB,GAJZ,kCAIY,MAHxB,SAGwB,GAHZ,yBAGY,MAFxB,SAEwB,GAFZ,EAEY;AACtB,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,GAAL,GAAW,GAAX,CACD,C;;;;;;;;;;;;;;;;;;;;;;;AAsBW,Y,EAAU;AACpB,WAAK,SAAL,CAAe,IAAf,CAAoB,QAApB;AACA,eAAS,IAAT,GAAgB,IAAhB;;AAEA,WAAK,YAAL,CAAkB,QAAlB,EACD,C;;;AAEc,Y,EAAU;AACvB,UAAM,QAAQ,KAAK,SAAL,CAAe,OAAf,CAAuB,QAAvB,CAAd;AACA,UAAI,UAAU,CAAC,CAAf;AACE;;AAEF,WAAK,SAAL,CAAe,MAAf,CAAsB,KAAtB,EAA6B,CAA7B;AACA,eAAS,IAAT,GAAgB,IAAhB;AACA,WAAK,eAAL,CAAqB,QAArB,EACD,C;;;AAEY,U,EAAQ;AACnB,UAAM,OAAO,OAAO,IAAP,CAAY,OAAO,kBAAP,CAA0B,gBAAtC,CAAb;AACA,WAAK,OAAL,CAAa,eAAM;AACjB,eAAO,kBAAP,CAA0B,gBAA1B,CAA2C,GAA3C,EAAgD,OAAhD,CAAwD,2BAAS,MAAK,SAAL,CAAe,GAAf,CAAmB,OAAnB,CAAT,EAAxD,EACD,CAFD,EAGD,C;;;;AAEe,U,EAAQ;AACtB,UAAM,OAAO,OAAO,IAAP,CAAY,OAAO,kBAAP,CAA0B,gBAAtC,CAAb;AACA,WAAK,OAAL,CAAa,eAAM;AACjB,eAAO,kBAAP,CAA0B,gBAA1B,CAA2C,GAA3C,EAAgD,OAAhD,CAAwD,2BAAS,OAAK,SAAL,CAAe,MAAf,CAAsB,OAAtB,CAAT,EAAxD,EACD,CAFD,EAGD,C,wCAjDW,CACV,OAAO,KAAK,GAAL,CAAS,KAAhB,CACD,C,+CAEkB,CACjB,OAAO,KAAK,aAAZ,CACD,C,oBAEgB,Y,EAAc,CAC7B,IAAM,uBAAuB,KAAK,aAAlC,CACA,IAAI,oBAAJ,EACE,KAAK,eAAL,CAAqB,oBAArB,EAEF,KAAK,aAAL,GAAqB,YAArB,CACA,IAAI,YAAJ,EAAkB,CAChB,aAAa,IAAb,GAAoB,IAApB,CACA,KAAK,YAAL,CAAkB,YAAlB,EACD,CACF,C;;;;;AAkCY,I","file":"Tile.js","sourcesContent":["'use strict';\r\nimport EntitiesByPriority from './EntitiesByPriority';\r\nimport Inventory from './Inventory';\r\nimport SubscribedHandlers from './SubscribedHandlers';\r\n\r\n\r\nclass Tile {\r\n  _architecture = null;\r\n  _handlers = new SubscribedHandlers();\r\n  inventory = new Inventory();\r\n  occupants = [];\r\n\r\n  constructor(point, map) {\r\n    this.point = point;\r\n    this.map = map;\r\n  }\r\n\r\n  get level() {\r\n    return this.map.level;\r\n  }\r\n\r\n  get architecture() {\r\n    return this._architecture;\r\n  }\r\n\r\n  set architecture(architecture) {\r\n    const previousArchitecture = this._architecture;\r\n    if (previousArchitecture)\r\n      this._removeHandlers(previousArchitecture);\r\n\r\n    this._architecture = architecture;\r\n    if (architecture) {\r\n      architecture.tile = this;\r\n      this._addHandlers(architecture);\r\n    }\r\n  }\r\n\r\n  addOccupant(occupant) {\r\n    this.occupants.push(occupant);\r\n    occupant.tile = this;\r\n\r\n    this._addHandlers(occupant);\r\n  }\r\n\r\n  removeOccupant(occupant) {\r\n    const index = this.occupants.indexOf(occupant);\r\n    if (index === -1)\r\n      return;\r\n\r\n    this.occupants.splice(index, 1);\r\n    occupant.tile = null;\r\n    this._removeHandlers(occupant);\r\n  }\r\n\r\n  _addHandlers(entity) {\r\n    const keys = Object.keys(entity.subscribedHandlers._handlersByEvent);\r\n    keys.forEach(key=> {\r\n      entity.subscribedHandlers._handlersByEvent[key].forEach(handler=>this._handlers.add(handler));\r\n    });\r\n  }\r\n\r\n  _removeHandlers(entity) {\r\n    const keys = Object.keys(entity.subscribedHandlers._handlersByEvent);\r\n    keys.forEach(key=> {\r\n      entity.subscribedHandlers._handlersByEvent[key].forEach(handler=>this._handlers.remove(handler));\r\n    });\r\n  }\r\n}\r\n\r\nexport default Tile;\r\n"],"sourceRoot":"/source/"}