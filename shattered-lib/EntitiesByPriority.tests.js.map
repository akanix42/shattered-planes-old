{"version":3,"sources":["EntitiesByPriority.tests.js"],"names":[],"mappings":"AAAA;AACA,4B;AACA,6D;;AAEA,eAAK,MAAL;;AAEA,SAAS,oBAAT,EAA+B,YAAM;;AAEnC,WAAS,KAAT,EAAgB,YAAK;AACnB,OAAG,uBAAH,EAA4B,YAAK;AAC/B,UAAM,WAAW,kCAAjB;AACA,UAAM,SAAS,EAAf;;AAEA,eAAS,GAAT,CAAa,MAAb,EAAqB,CAArB,EACD,CALD,EAMD,CAPD;;;;AASA,WAAS,MAAT,EAAiB,YAAK;;AAEpB,kEAA8D,YAAK;AACjE,UAAM,WAAW,kCAAjB;AACA,UAAI,cAAc,EAAlB;AACA,UAAM,UAAU,EAAhB;AACA,cAAQ,IAAR,GAAe,oBAAM,YAAY,IAAZ,CAAiB,OAAjB,CAAN,EAAf;AACA,UAAM,UAAU,EAAC,MAAM,wBAAM,YAAY,IAAZ,CAAiB,OAAjB,CAAN,EAAP,EAAhB;AACA,UAAM,UAAU,EAAC,MAAM,wBAAM,YAAY,IAAZ,CAAiB,OAAjB,CAAN,EAAP,EAAhB;;AAEA,eAAS,GAAT,CAAa,OAAb,EAAsB,EAAtB;AACA,eAAS,GAAT,CAAa,OAAb,EAAsB,CAAtB;AACA,eAAS,GAAT,CAAa,OAAb,EAAsB,EAAtB;;AAEA,UAAM,QAAQ,EAAC,MAAM,MAAP,EAAd;AACA,eAAS,IAAT,CAAc,KAAd;;AAEA,kBAAY,CAAZ,EAAe,MAAf,CAAsB,KAAtB,CAA4B,OAA5B;AACA,kBAAY,CAAZ,EAAe,MAAf,CAAsB,KAAtB,CAA4B,OAA5B;AACA,kBAAY,CAAZ,EAAe,MAAf,CAAsB,KAAtB,CAA4B,OAA5B,EACD,CAlBD;;;AAoBA,8CAA0C,YAAK;AAC7C,UAAM,WAAW,kCAAjB;AACA,UAAI,qBAAJ;AACA,UAAM,SAAS,EAAC,MAAM,6BAAS,eAAe,KAAxB,EAAP,EAAf;AACA,eAAS,GAAT,CAAa,MAAb,EAAqB,CAArB;;AAEA,UAAM,QAAQ,EAAC,MAAM,MAAP,EAAd;AACA,eAAS,IAAT,CAAc,KAAd;;AAEA,mBAAa,MAAb,CAAoB,KAApB,CAA0B,KAA1B,EACD,CAVD;;;AAYA,uEAAkE,YAAK;AACrE,UAAM,WAAW,kCAAjB;AACA,UAAI,eAAe,EAAnB;AACA,UAAM,SAAS,EAAC,MAAM,6BAAS,YAAT,EAAP,EAAf;AACA,eAAS,GAAT,CAAa,MAAb,EAAqB,CAArB;;AAEA,UAAM,QAAQ,EAAC,MAAM,MAAP,EAAd;AACA,UAAM,SAAS,SAAS,IAAT,CAAc,KAAd,CAAf;AACA,aAAO,MAAP,CAAc,KAAd,CAAoB,YAApB,EACD,CATD,EAUD,CA5CD;;;;AA8CA,WAAS,QAAT,EAAmB,YAAK;;AAEtB,OAAG,0BAAH,EAA+B,YAAK;AAClC,UAAM,WAAW,kCAAjB;AACA,UAAI,kBAAkB,KAAtB;AACA,UAAM,SAAS,EAAC,MAAM,wBAAM,kBAAkB,IAAxB,EAAP,EAAf;;AAEA,eAAS,GAAT,CAAa,MAAb,EAAqB,CAArB;AACA,eAAS,MAAT,CAAgB,MAAhB;AACA,eAAS,IAAT,CAAc,EAAd;;AAEA,sBAAgB,MAAhB,CAAuB,EAAvB,CAA0B,KAA1B,CACD,CAVD,EAaD,CAfD,EAiBD,CA1ED","file":"EntitiesByPriority.tests.js","sourcesContent":["'use strict';\r\nimport chai from 'chai';\r\nimport EntitiesByPriority from './EntitiesByPriority.js';\r\n\r\nchai.should();\r\n\r\ndescribe('EntitiesByPriority', () => {\r\n\r\n  describe('add', ()=> {\r\n    it('should add the entity', ()=> {\r\n      const entities = new EntitiesByPriority();\r\n      const entity = {};\r\n\r\n      entities.add(entity, 0);\r\n    });\r\n  });\r\n\r\n  describe('emit', ()=> {\r\n\r\n    it(`should emit the event to all entities in priority order`, ()=> {\r\n      const entities = new EntitiesByPriority();\r\n      let calledFirst = [];\r\n      const entity1 = {};\r\n      entity1.emit = () => calledFirst.push(entity1);\r\n      const entity2 = {emit: () => calledFirst.push(entity2)};\r\n      const entity3 = {emit: () => calledFirst.push(entity3)};\r\n\r\n      entities.add(entity2, 10);\r\n      entities.add(entity1, 0);\r\n      entities.add(entity3, 20);\r\n\r\n      const event = {name: 'test'};\r\n      entities.emit(event);\r\n\r\n      calledFirst[0].should.equal(entity1);\r\n      calledFirst[1].should.equal(entity2);\r\n      calledFirst[2].should.equal(entity3);\r\n    });\r\n\r\n    it(`should pass the event to the entity`, ()=> {\r\n      const entities = new EntitiesByPriority();\r\n      let handledEvent;\r\n      const entity = {emit: event => handledEvent = event};\r\n      entities.add(entity, 0);\r\n\r\n      const event = {name: 'test'};\r\n      entities.emit(event);\r\n\r\n      handledEvent.should.equal(event);\r\n    });\r\n\r\n    it(`should return the updated event from the handler's callback`, ()=> {\r\n      const entities = new EntitiesByPriority();\r\n      let updatedEvent = {};\r\n      const entity = {emit: event => updatedEvent};\r\n      entities.add(entity, 0);\r\n\r\n      const event = {name: 'test'};\r\n      const result = entities.emit(event);\r\n      result.should.equal(updatedEvent);\r\n    });\r\n  });\r\n\r\n  describe('remove', ()=> {\r\n\r\n    it('should remove the entity', ()=> {\r\n      const entities = new EntitiesByPriority();\r\n      let eventWasHandled = false;\r\n      const entity = {emit: () => eventWasHandled = true};\r\n\r\n      entities.add(entity, 0);\r\n      entities.remove(entity);\r\n      entities.emit({});\r\n\r\n      eventWasHandled.should.be.false;\r\n    });\r\n\r\n\r\n  });\r\n\r\n});\r\n"],"sourceRoot":"/source/"}