{"version":3,"sources":["Entity.tests.js"],"names":[],"mappings":"AAAA;AACA,4B;AACA,qC;;AAEA,eAAK,MAAL;;AAEA,SAAS,QAAT,EAAmB,YAAM;AACvB,WAAS,cAAT,EAAyB,YAAK;;AAE5B,OAAG,4BAAH,EAAiC,YAAK;AACpC,UAAM,SAAS,sBAAf;AACA,UAAM,YAAY,EAAC,MAAM,WAAP,EAAoB,UAAU,EAA9B,EAAlB;AACA,aAAO,YAAP,CAAoB,SAApB;;AAEA,aAAO,WAAP,CAAmB,WAAnB,EAAgC,MAAhC,CAAuC,KAAvC,CAA6C,SAA7C,EACD,CAND,EAOD,CATD;;;;AAWA,WAAS,SAAT,EAAoB,YAAK;;AAEvB,OAAG,mBAAH,EAAwB,YAAK;AAC3B,UAAM,SAAS,sBAAf;AACA,aAAO,OAAP,CAAe,MAAf;;AAEA,OAAC,UAAU,OAAO,KAAlB,EAAyB,MAAzB,CAAgC,EAAhC,CAAmC,IAAnC,CACD,CALD;;;AAOA,OAAG,qDAAH,EAA0D,YAAK;AAC7D,UAAM,SAAS,sBAAf;AACA,UAAI,YAAY,EAAhB;AACA,aAAO,IAAP,GAAc,yBAAS,YAAY,MAAM,IAA3B,EAAd;;AAEA,aAAO,OAAP,CAAe,MAAf;AACA,aAAO,KAAP,CAAa,IAAb;AACA,gBAAU,MAAV,CAAiB,KAAjB,CAAuB,aAAvB,EACD,CARD,EAUD,CAnBD;;;;;AAqBA,WAAS,iBAAT,EAA4B,YAAK;;AAE/B,OAAG,qCAAH,EAA0C,YAAK;AAC7C,UAAM,SAAS,sBAAf;AACA,aAAO,WAAP,GAAqB,EAAC,MAAM,WAAP,EAArB;AACA,aAAO,eAAP,CAAuB,WAAvB;;AAEA,aAAO,WAAP,CAAmB,MAAnB,CAA0B,GAA1B,CAA8B,IAA9B,CAAmC,QAAnC,CAA4C,WAA5C,EACD,CAND,EAQD,CAVD;;;;;AAYA,WAAS,MAAT,EAAiB,YAAK;;AAEpB,OAAG,kDAAH,EAAuD,YAAK;AAC1D,UAAM,SAAS,sBAAf;AACA,UAAI,kBAAkB,KAAtB;AACA,aAAO,kBAAP,GAA4B,EAAC,MAAM,6BAAS,kBAAkB,IAA3B,EAAP,EAA5B;AACA,aAAO,IAAP,CAAY,EAAZ;;AAEA,sBAAgB,MAAhB,CAAuB,EAAvB,CAA0B,IAA1B,CACD,CAPD;;;AASA,OAAG,iCAAH,EAAsC,YAAK;AACzC,UAAM,SAAS,sBAAf;AACA,UAAI,eAAe,EAAnB;AACA,aAAO,kBAAP,GAA4B,EAAC,MAAM,6BAAS,YAAT,EAAP,EAA5B;AACA,UAAM,SAAS,OAAO,IAAP,CAAY,EAAZ,CAAf;;AAEA,aAAO,MAAP,CAAc,KAAd,CAAoB,YAApB,EACD,CAPD,EASD,CApBD;;;;;AAsBA,KAAG,wBAAH,EAA6B,YAAM;AACjC,qBAAO,QAAP,CAAgB,MAAhB,CAAuB,KAAvB,CAA6B,QAA7B,EACD,CAFD,EAID,CAvED","file":"Entity.tests.js","sourcesContent":["'use strict';\r\nimport chai from 'chai';\r\nimport Entity from './Entity.js';\r\n\r\nchai.should();\r\n\r\ndescribe('Entity', () => {\r\n  describe('addComponent', ()=> {\r\n\r\n    it('should add a new component', ()=> {\r\n      const entity = new Entity();\r\n      const component = {_key: 'component', handlers: []};\r\n      entity.addComponent(component);\r\n\r\n      entity._components['component'].should.equal(component);\r\n    });\r\n  });\r\n\r\n  describe('addStat', ()=> {\r\n\r\n    it('should add a stat', ()=> {\r\n      const entity = new Entity();\r\n      entity.addStat('test');\r\n\r\n      ('test' in entity.stats).should.be.true;\r\n    });\r\n\r\n    it('should emit a get event when the stat is referenced', ()=> {\r\n      const entity = new Entity();\r\n      let eventName = '';\r\n      entity.emit = event => eventName = event.name;\r\n\r\n      entity.addStat('test');\r\n      entity.stats.test;\r\n      eventName.should.equal('onStat.test');\r\n    });\r\n\r\n  });\r\n\r\n  describe('removeComponent', ()=> {\r\n\r\n    it('should remove an existing component', ()=> {\r\n      const entity = new Entity();\r\n      entity._components = {_key: 'component'};\r\n      entity.removeComponent('component');\r\n\r\n      entity._components.should.not.have.property('component');\r\n    });\r\n\r\n  });\r\n\r\n  describe('emit', ()=> {\r\n\r\n    it('should emit the event to the subscribed handlers', ()=> {\r\n      const entity = new Entity();\r\n      let wasEventEmitted = false;\r\n      entity.subscribedHandlers = {emit: event => wasEventEmitted = true};\r\n      entity.emit({});\r\n\r\n      wasEventEmitted.should.be.true;\r\n    });\r\n\r\n    it('should return the updated event', ()=> {\r\n      const entity = new Entity();\r\n      let updatedEvent = {};\r\n      entity.subscribedHandlers = {emit: event => updatedEvent};\r\n      const result = entity.emit({});\r\n\r\n      result.should.equal(updatedEvent);\r\n    });\r\n\r\n  });\r\n\r\n  it('should be serializable', () => {\r\n    Entity.__type__.should.equal('Entity');\r\n  });\r\n\r\n});"],"sourceRoot":"/source/"}