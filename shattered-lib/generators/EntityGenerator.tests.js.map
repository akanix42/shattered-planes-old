{"version":3,"sources":["generators/EntityGenerator.tests.js"],"names":[],"mappings":"AAAA,a;AACA,4B;AACA,oD;;AAEA,eAAK,MAAL;;AAEA,SAAS,iBAAT,EAA4B,YAAM;;AAEhC,WAAS,UAAT,EAAqB,YAAK;AACxB,OAAG,gDAAH,EAAqD,YAAK;AACxD,UAAM,eAAe;AACnB,cAAM,MADa,EAArB;;AAGA,UAAM,kBAAkB,+BAAxB;AACA,sBAAgB,UAAhB,CAA2B,aAAa,IAAxC,IAAgD,YAAhD;;AAEA,UAAM,SAAS,gBAAgB,QAAhB,CAAyB,MAAzB,CAAf;AACA,aAAO,QAAP,CAAgB,MAAhB,CAAuB,KAAvB,CAA6B,YAA7B,EACD,CATD;;;AAWA,qEAAgE,YAAK;AACnE,UAAM,eAAe;AACnB,cAAM,MADa;AAEnB,oBAAY,CAAC,YAAD,EAAe,YAAf,CAFO,EAArB;;AAIA,UAAM,kBAAkB,EAAxB,CALmE;AAM7D,YAN6D;AAOpD,mBAPoD,EAOzC;AACtB,4BAAgB,IAAhB,CAAqB,SAArB,EACD,CATgE;;;AAWnE,UAAM,kBAAkB,+BAAxB;AACA,sBAAgB,OAAhB,GAA0B,MAA1B;AACA,sBAAgB,UAAhB,CAA2B,aAAa,IAAxC,IAAgD,YAAhD;AACA,sBAAgB,mBAAhB,GAAsC,EAAE,UAAU,yCAAgB,EAAC,4BAAD,EAAhB,EAAZ,EAAtC;;AAEA,sBAAgB,QAAhB,CAAyB,MAAzB;AACA,sBAAgB,CAAhB,EAAmB,MAAnB,CAA0B,GAA1B,CAA8B,EAAC,eAAc,YAAf,EAA9B;AACA,sBAAgB,CAAhB,EAAmB,MAAnB,CAA0B,GAA1B,CAA8B,EAAC,eAAc,YAAf,EAA9B,EACD,CAnBD,EAoBD,CAhCD,EAkCD,CApCD","file":"generators/EntityGenerator.tests.js","sourcesContent":["'use strict';\r\nimport chai from 'chai';\r\nimport EntityGenerator from './EntityGenerator';\r\n\r\nchai.should();\r\n\r\ndescribe('EntityGenerator', () => {\r\n\r\n  describe('generate', ()=> {\r\n    it('should generate an entity of the supplied type', ()=> {\r\n      const testTemplate = {\r\n        name: 'test',\r\n      };\r\n      const entityGenerator = new EntityGenerator();\r\n      entityGenerator._templates[testTemplate.name] = testTemplate;\r\n      \r\n      const entity = entityGenerator.generate('test');\r\n      entity.template.should.equal(testTemplate);\r\n    });\r\n\r\n    it(`should add all of the template's components to the entity`, ()=> {\r\n      const testTemplate = {\r\n        name: 'test',\r\n        components: ['component1', 'component2']\r\n      };\r\n      const addedComponents = [];\r\n      class Entity{\r\n        addComponent(component) {\r\n          addedComponents.push(component);\r\n        }\r\n      }\r\n      const entityGenerator = new EntityGenerator();\r\n      entityGenerator._Entity = Entity;\r\n      entityGenerator._templates[testTemplate.name] = testTemplate;\r\n      entityGenerator._componentGenerator = { generate: componentName=>({componentName})};\r\n\r\n      entityGenerator.generate('test');\r\n      addedComponents[0].should.eql({componentName:'component1'});\r\n      addedComponents[1].should.eql({componentName:'component2'});\r\n    });\r\n  });\r\n\r\n});\r\n"],"sourceRoot":"/source/"}