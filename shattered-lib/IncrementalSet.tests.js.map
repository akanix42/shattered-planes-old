{"version":3,"sources":["IncrementalSet.tests.js"],"names":[],"mappings":"AAAA;AACA,4B;AACA,qD;;AAEA,eAAK,MAAL;;AAEA,SAAS,gBAAT,EAA2B,YAAM;AAC/B,WAAS,KAAT,EAAgB,YAAK;;AAEnB,OAAG,+BAAH,EAAoC,YAAK;AACvC,UAAM,MAAM,8BAAZ;AACA,UAAI,GAAJ,CAAQ,MAAR,EACD,CAHD;;;AAKA,OAAG,4CAAH,EAAiD,YAAK;AACpD,UAAM,MAAM,8BAAZ;AACA,UAAI,GAAJ,CAAQ,MAAR;AACA,UAAI,GAAJ,CAAQ,MAAR,EACD,CAJD,EAMD,CAbD;;;;;AAeA,WAAS,KAAT,EAAgB,YAAK;;AAEnB,OAAG,gEAAH,EAAqE,YAAK;AACxE,UAAM,MAAM,8BAAZ;AACA,UAAI,GAAJ,CAAQ,MAAR,EAAgB,MAAhB,CAAuB,EAAvB,CAA0B,KAA1B,CACD,CAHD;;;AAKA,OAAG,2DAAH,EAAgE,YAAK;AACnE,UAAM,MAAM,8BAAZ;AACA,UAAI,GAAJ,CAAQ,MAAR;AACA,UAAI,GAAJ,CAAQ,MAAR,EAAgB,MAAhB,CAAuB,EAAvB,CAA0B,IAA1B,CACD,CAJD,EAMD,CAbD;;;;;AAeA,WAAS,QAAT,EAAmB,YAAK;;AAEtB,OAAG,oCAAH,EAAyC,YAAK;AAC5C,UAAM,MAAM,8BAAZ;AACA,UAAI,GAAJ,CAAQ,MAAR;AACA,UAAI,MAAJ,CAAW,MAAX;AACA,UAAI,GAAJ,CAAQ,MAAR,EAAgB,MAAhB,CAAuB,EAAvB,CAA0B,KAA1B,CACD,CALD;;;AAOA,OAAG,kFAAH,EAAuF,YAAK;AAC1F,UAAM,MAAM,8BAAZ;AACA,UAAI,GAAJ,CAAQ,MAAR;AACA,UAAI,GAAJ,CAAQ,MAAR;AACA,UAAI,MAAJ,CAAW,MAAX;AACA,UAAI,GAAJ,CAAQ,MAAR,EAAgB,MAAhB,CAAuB,EAAvB,CAA0B,IAA1B;AACA,UAAI,MAAJ,CAAW,MAAX;AACA,UAAI,GAAJ,CAAQ,MAAR,EAAgB,MAAhB,CAAuB,EAAvB,CAA0B,KAA1B,CACD,CARD,EAUD,CAnBD,EAqBD,CApDD","file":"IncrementalSet.tests.js","sourcesContent":["'use strict';\r\nimport chai from 'chai';\r\nimport IncrementalSet from './IncrementalSet.js';\r\n\r\nchai.should();\r\n\r\ndescribe('IncrementalSet', () => {\r\n  describe('add', ()=> {\r\n\r\n    it('should add a value to the set', ()=> {\r\n      const set = new IncrementalSet();\r\n      set.add('test');\r\n    });\r\n\r\n    it('should allow adding a value multiple times', ()=> {\r\n      const set = new IncrementalSet();\r\n      set.add('test');\r\n      set.add('test');\r\n    });\r\n\r\n  });\r\n\r\n  describe('has', ()=> {\r\n\r\n    it('should return false if the value has not been added to the set', ()=> {\r\n      const set = new IncrementalSet();\r\n      set.has('test').should.be.false;\r\n    });\r\n\r\n    it('should return true if the value has been added to the set', ()=> {\r\n      const set = new IncrementalSet();\r\n      set.add('test');\r\n      set.has('test').should.be.true;\r\n    });\r\n\r\n  });\r\n\r\n  describe('delete', ()=> {\r\n    \r\n    it('should remove a value from the set', ()=> {\r\n      const set = new IncrementalSet();\r\n      set.add('test');\r\n      set.delete('test');\r\n      set.has('test').should.be.false;\r\n    });\r\n\r\n    it('should only remove one \"instance\" of a value from the set each time it is called', ()=> {\r\n      const set = new IncrementalSet();\r\n      set.add('test');\r\n      set.add('test');\r\n      set.delete('test');\r\n      set.has('test').should.be.true;\r\n      set.delete('test');\r\n      set.has('test').should.be.false;\r\n    });\r\n\r\n  });\r\n\r\n});"],"sourceRoot":"/source/"}