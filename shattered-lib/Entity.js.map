{"version":3,"sources":["Entity.js"],"names":[],"mappings":"AAAA,a;AACA;AACA,0D;;;AAGM,M,WADL,yBAAa,QAAb,C;AAEC,e,GAAc,E;AACd,S,GAAQ,E;AACR,sB,GAAqB,kC;;AAER,a,EAAW;AACtB,UAAI,UAAU,IAAV,IAAkB,KAAK,WAA3B;AACE,YAAM,IAAI,KAAJ,gBAAuB,IAAvB,mCAAyD,KAAzD,CAAN;;AAEF,WAAK,WAAL,CAAiB,UAAU,IAA3B,IAAmC,SAAnC;AACA,gBAAU,MAAV,GAAmB,IAAnB;AACA,WAAK,kBAAL,CAAwB,SAAxB;AACA,aAAO,IAAP,CACD,C;;;AAEe,O,EAAK;AACnB,UAAM,YAAY,KAAK,WAAL,CAAiB,GAAjB,CAAlB;AACA,UAAI,CAAC,SAAL;AACE;;AAEF,WAAK,oBAAL,CAA0B,SAA1B;AACA,aAAO,KAAK,WAAL,CAAiB,GAAjB,CAAP;AACA,gBAAU,MAAV,GAAmB,IAAnB,CACD,C;;;AAEO,Q,EAAM;AACZ,UAAI,QAAQ,KAAK,KAAjB;AACE;;AAEF,aAAO,cAAP,CAAsB,KAAK,KAA3B,EAAkC,IAAlC,EAAwC;AACtC,aAAK,uBAAM,OAAK,IAAL,CAAU,EAAC,MAAM,YAAY,IAAnB,EAAV,CAAN,EADiC;AAEtC,sBAAc,IAFwB;AAGtC,oBAAY,IAH0B,EAAxC,EAKD,C;;;;AAEU,Q,EAAM;AACf,aAAO,KAAK,KAAL,CAAW,IAAX,CAAP,CACD,C;;;AAEkB,a,EAAW;AAC5B,gBAAU,QAAV,CAAmB,OAAnB,CAA2B,gCAAgB,OAAK,kBAAL,CAAwB,GAAxB,CAA4B,YAA5B,EAA0C,SAA1C,CAAhB,EAA3B,EACD,C;;;AAEoB,a,EAAW;AAC9B,WAAK,kBAAL,CAAwB,eAAxB,CAAwC,SAAxC,EACD,C;;;AAEI,S,EAAO;AACV,aAAO,KAAK,kBAAL,CAAwB,IAAxB,CAA6B,KAA7B,CAAP,CACD,C;;;;AAGY,M","file":"Entity.js","sourcesContent":["'use strict';\r\nimport {serializable} from 'jsonc';\r\nimport SubscribedHandlers from './SubscribedHandlers';\r\n\r\n@serializable('Entity')\r\nclass Entity {\r\n  _components = [];\r\n  stats = {};\r\n  subscribedHandlers = new SubscribedHandlers();\r\n\r\n  addComponent(component) {\r\n    if (component._key in this._components)\r\n      throw new Error(`Component ${_key} already exists for entity ${_this}`);\r\n\r\n    this._components[component._key] = component;\r\n    component.entity = this;\r\n    this.subscribeComponent(component);\r\n    return this;\r\n  }\r\n\r\n  removeComponent(key) {\r\n    const component = this._components[key];\r\n    if (!component)\r\n      return;\r\n\r\n    this.unsubscribeComponent(component);\r\n    delete this._components[key];\r\n    component.entity = null;\r\n  }\r\n\r\n  addStat(name) {\r\n    if (name in this.stats)\r\n      return;\r\n\r\n    Object.defineProperty(this.stats, name, {\r\n      get: () => this.emit({name: 'onStat.' + name }),\r\n      configurable: true,\r\n      enumerable: true\r\n    });\r\n  }\r\n\r\n  removeStat(name) {\r\n    delete this.stats[name];\r\n  }\r\n\r\n  subscribeComponent(component) {\r\n    component.handlers.forEach(subscription => this.subscribedHandlers.add(subscription, component));\r\n  }\r\n\r\n  unsubscribeComponent(component) {\r\n    this.subscribedHandlers.removeComponent(component);\r\n  }\r\n\r\n  emit(event) {\r\n    return this.subscribedHandlers.emit(event);\r\n  }\r\n}\r\n\r\nexport default Entity;"],"sourceRoot":"/source/"}