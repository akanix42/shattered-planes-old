{"version":3,"sources":["Tile.tests.js"],"names":[],"mappings":"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","file":"Tile.tests.js","sourcesContent":["'use strict';\r\nimport Tile from './Tile.js';\r\nimport Inventory from './Inventory';\r\nimport Entity from './Entity.js';\r\n\r\nimport chai from 'chai';\r\nchai.should();\r\nconst expect = chai.expect;\r\n\r\ndescribe('Tile', () => {\r\n\r\n  describe('point', ()=> {\r\n    it('should return the tile`s point coordinates', ()=> {\r\n      const point = {};\r\n      const tile = new Tile(point, {});\r\n      tile.point.should.equal(point);\r\n    });\r\n  });\r\n\r\n  describe('level', ()=> {\r\n    it('should return the tile`s level', ()=> {\r\n      const level = {};\r\n      const tile = new Tile({}, {level});\r\n      tile.level.should.equal(level);\r\n    });\r\n  });\r\n\r\n  describe('addOccupant()', ()=> {\r\n\r\n    it(`should add the occupant`, ()=> {\r\n      const tile = new Tile();\r\n      const occupant = new Entity();\r\n      tile.addOccupant(occupant);\r\n      expect(tile.occupants[0]).to.equal(occupant);\r\n    });\r\n\r\n    it(`should add multiple occupants`, ()=> {\r\n      const tile = new Tile();\r\n      const occupant = new Entity();\r\n      const occupant2 = new Entity();\r\n      tile.addOccupant(occupant);\r\n      tile.addOccupant(occupant2);\r\n      expect(tile.occupants[0]).to.equal(occupant);\r\n      expect(tile.occupants[1]).to.equal(occupant2);\r\n    });\r\n\r\n    it(`should add the occupant's handlers to the combined handlers list`, ()=> {\r\n      const tile = new Tile();\r\n      const occupant = new Entity();\r\n      const handler = {eventName: 'test', callback: null, component: {}};\r\n      occupant.subscribedHandlers.add(handler);\r\n      tile.addOccupant(occupant);\r\n\r\n      expect(tile._handlers._handlersByEvent['test'][0]).to.equal(handler);\r\n    });\r\n  });\r\n\r\n  describe('removeOccupant()', ()=> {\r\n\r\n    it(`should remove the occupant`, ()=> {\r\n      const tile = new Tile();\r\n      const occupant = new Entity();\r\n      tile.addOccupant(occupant);\r\n      expect(tile.occupants[0]).to.equal(occupant);\r\n    });\r\n\r\n    it(`should remove the occupant's handlers from the combined handlers list`, ()=> {\r\n      const tile = new Tile();\r\n      const occupant = new Entity();\r\n      const handler = {eventName: 'test', callback: null, component: {}};\r\n      occupant.subscribedHandlers.add(handler);\r\n      tile.addOccupant(occupant);\r\n\r\n      expect(tile._handlers._handlersByEvent['test'][0]).to.equal(handler);\r\n\r\n      tile.removeOccupant(occupant);\r\n      expect(tile._handlers._handlersByEvent['test'].length).to.equal(0);\r\n    });\r\n  });\r\n\r\n  describe('architecture', ()=> {\r\n\r\n    it(`should add the architecture's handlers to the combined handlers list`, ()=> {\r\n      const tile = new Tile();\r\n      let result;\r\n      const architecture = new Entity();\r\n      const handler = {eventName: 'test', callback: null, component: {}};\r\n      architecture.subscribedHandlers.add(handler);\r\n      tile.architecture = architecture;\r\n\r\n      expect(tile._handlers._handlersByEvent['test'][0]).to.equal(handler);\r\n    });\r\n\r\n  });\r\n\r\n  describe('inventory', ()=> {\r\n\r\n    it(`should be an instance of Inventory`, ()=> {\r\n      const tile = new Tile();\r\n      expect(tile.inventory).to.be.an.instanceOf(Inventory);\r\n    });\r\n\r\n  });\r\n});\r\n"],"sourceRoot":"/source/"}