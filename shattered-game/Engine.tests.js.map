{"version":3,"sources":["Engine.tests.js"],"names":[],"mappings":"AAAA;AACA,4B;AACA,qC;;AAEA,eAAK,MAAL;;AAEA,SAAS,QAAT,EAAmB,YAAM;;AAEvB,WAAS,KAAT,EAAgB,YAAK;AACnB,OAAG,2DAAH,EAAgE,YAAM;AACpE,UAAI,SAAS,EAAb;AACA,UAAM,QAAQ;AACZ,WADY,iBACP,CACJ,CAFW,EAAd;;;AAIA,UAAM,SAAS,sBAAf;AACA,aAAO,UAAP,GAAoB;AAClB,WADkB,eACd,KADc,EACP,WADO,EACK;AACrB,mBAAS,EAAC,YAAD,EAAQ,wBAAR,EAAT,CACD,CAHiB,EAApB;;;;AAMA,aAAO,GAAP,CAAW,KAAX;;AAEA,aAAO,MAAP,CAAc,IAAd,CAAmB,KAAnB,CAAyB,EAAC,YAAD,EAAQ,aAAa,IAArB,EAAzB,EACD,CAhBD;;;AAkBA,OAAG,+DAAH,EAAoE,YAAM;AACxE,UAAI,SAAS,EAAb;AACA,UAAM,QAAQ;AACZ,WADY,iBACP,CACJ,CAFW,EAAd;;;AAIA,UAAM,SAAS,sBAAf;AACA,aAAO,UAAP,GAAoB;AAClB,WADkB,eACd,KADc,EACP,WADO,EACK;AACrB,mBAAS,EAAC,YAAD,EAAQ,wBAAR,EAAT,CACD,CAHiB,EAApB;;;;AAMA,aAAO,GAAP,CAAW,KAAX,EAAkB,KAAlB;;AAEA,aAAO,MAAP,CAAc,IAAd,CAAmB,KAAnB,CAAyB,EAAC,YAAD,EAAQ,aAAa,KAArB,EAAzB,EACD,CAhBD,EAiBD,CApCD;;;;AAsCA,WAAS,QAAT,EAAmB,YAAK;AACtB,OAAG,4CAAH,EAAiD,YAAM;AACrD,UAAI,SAAS,EAAb;AACA,UAAM,QAAQ;AACZ,WADY,iBACP,CACJ,CAFW,EAAd;;;AAIA,UAAM,SAAS,sBAAf;AACA,aAAO,UAAP,GAAoB;AAClB,cADkB,kBACX,KADW,EACL;AACX,mBAAS,EAAC,YAAD,EAAT,CACD,CAHiB,EAApB;;;;AAMA,aAAO,MAAP,CAAc,KAAd;;AAEA,aAAO,MAAP,CAAc,IAAd,CAAmB,KAAnB,CAAyB,EAAC,YAAD,EAAzB,EACD,CAhBD,EAiBD,CAlBD;;;;AAoBA,WAAS,MAAT,EAAiB,YAAK;AACpB,OAAG,yBAAH,EAA8B,YAAM;AAClC,UAAI,YAAY,KAAhB;AACA,UAAM,SAAS,sBAAf;;AAEA,aAAO,IAAP;AACA,aAAO,GAAP,CAAW;AACT,WADS,iBACH;AACJ,sBAAY,IAAZ,CACD,CAHQ,EAAX;;;AAKA,gBAAU,MAAV,CAAiB,EAAjB,CAAoB,KAApB,CACD,CAXD,EAYD,CAbD;;;;AAeA,WAAS,QAAT,EAAmB,YAAK;AACtB,OAAG,mCAAH,EAAwC,YAAM;AAC5C,UAAI,YAAY,KAAhB;AACA,UAAM,SAAS,sBAAf;;AAEA,aAAO,GAAP,CAAW;AACT,WADS,iBACH;AACJ,sBAAY,IAAZ,CACD,CAHQ,EAAX;;AAIG,WAJH;AAKA,aAAO,MAAP;;AAEA,gBAAU,MAAV,CAAiB,EAAjB,CAAoB,IAApB,CACD,CAZD;;;AAcA,OAAG,qDAAH,EAA0D,YAAM;AAC9D,UAAI,YAAY,KAAhB;AACA,UAAM,SAAS,sBAAf;;AAEA,aAAO,MAAP;AACA,aAAO,GAAP,CAAW;AACT,WADS,iBACH;AACJ,sBAAY,IAAZ,CACD,CAHQ,EAAX;;AAIG,WAJH;;AAMA,gBAAU,MAAV,CAAiB,EAAjB,CAAoB,KAApB,CACD,CAZD,EAcD,CA7BD,EA+BD,CA1GD","file":"Engine.tests.js","sourcesContent":["'use strict';\r\nimport chai from 'chai';\r\nimport Engine from './Engine.js';\r\n\r\nchai.should();\r\n\r\ndescribe('Engine', () => {\r\n\r\n  describe('add', ()=> {\r\n    it('should add the actor to the scheduler as a recurring item', () => {\r\n      let result = {};\r\n      const actor = {\r\n        act(){\r\n        }\r\n      };\r\n      const engine = new Engine();\r\n      engine._scheduler = {\r\n        add(actor, isRecurring){\r\n          result = {actor, isRecurring};\r\n        }\r\n      };\r\n\r\n      engine.add(actor);\r\n\r\n      result.should.deep.equal({actor, isRecurring: true});\r\n    });\r\n\r\n    it('should add the actor to the scheduler as a non-recurring item', () => {\r\n      let result = {};\r\n      const actor = {\r\n        act(){\r\n        }\r\n      };\r\n      const engine = new Engine();\r\n      engine._scheduler = {\r\n        add(actor, isRecurring){\r\n          result = {actor, isRecurring};\r\n        }\r\n      };\r\n\r\n      engine.add(actor, false);\r\n\r\n      result.should.deep.equal({actor, isRecurring: false});\r\n    });\r\n  });\r\n\r\n  describe('remove', ()=> {\r\n    it('should remove the actor from the scheduler', () => {\r\n      let result = {};\r\n      const actor = {\r\n        act(){\r\n        }\r\n      };\r\n      const engine = new Engine();\r\n      engine._scheduler = {\r\n        remove(actor){\r\n          result = {actor};\r\n        }\r\n      };\r\n\r\n      engine.remove(actor);\r\n\r\n      result.should.deep.equal({actor});\r\n    });\r\n  });\r\n\r\n  describe('lock', ()=> {\r\n    it('should pause the engine', () => {\r\n      let wasCalled = false;\r\n      const engine = new Engine();\r\n\r\n      engine.lock();\r\n      engine.add({\r\n        act() {\r\n          wasCalled = true;\r\n        }\r\n      });\r\n      wasCalled.should.be.false;\r\n    });\r\n  });\r\n\r\n  describe('unlock', ()=> {\r\n    it('should cause the scheduler to run', () => {\r\n      let wasCalled = false;\r\n      const engine = new Engine();\r\n\r\n      engine.add({\r\n        act() {\r\n          wasCalled = true;\r\n        }\r\n      }, false);\r\n      engine.unlock();\r\n\r\n      wasCalled.should.be.true;\r\n    });\r\n\r\n    it('should not unlock the engine if there are no actors', () => {\r\n      let wasCalled = false;\r\n      const engine = new Engine();\r\n\r\n      engine.unlock();\r\n      engine.add({\r\n        act() {\r\n          wasCalled = true;\r\n        }\r\n      }, false);\r\n\r\n      wasCalled.should.be.false;\r\n    });\r\n\r\n  });\r\n\r\n});\r\n"],"sourceRoot":"/source/"}